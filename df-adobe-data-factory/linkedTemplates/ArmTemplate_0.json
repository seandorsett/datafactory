{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-adobe-data-factory"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"MongoDbAtlas_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDbAtlas'"
		},
		"MongoDbAtlas_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "demo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbAtlas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('MongoDbAtlas_connectionString')]",
					"database": "[parameters('MongoDbAtlas_properties_typeProperties_database')]",
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/globalXdmCollection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "globalXdm"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDbAtlas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/globalXdmJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "globalXdm.json",
						"folderPath": "aep",
						"container": "adobe"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "object",
							"properties": {
								"$oid": {
									"type": "string"
								}
							}
						},
						"id": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"auditable": {
							"type": "boolean"
						},
						"refs": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "output.json",
						"folderPath": "aep",
						"container": "adobe"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tenantXdmCollection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "tenantXdm",
					"query": "{\"xdmType\": \"schema\"}"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDbAtlas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tenantXdmJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "tenantXdm.json",
						"folderPath": "aep",
						"container": "adobe"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "object",
							"properties": {
								"$oid": {
									"type": "string"
								}
							}
						},
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"auditable": {
							"type": "boolean"
						},
						"description": {
							"type": "string"
						},
						"metaclass": {
							"type": "string"
						},
						"xdmType": {
							"type": "string"
						},
						"refs": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xdmDescriptorCollection')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "xdmDescriptor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDbAtlas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xdmDescriptorJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "xdmDescriptor.json",
						"folderPath": "aep",
						"container": "adobe"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "object",
							"properties": {
								"$oid": {
									"type": "string"
								}
							}
						},
						"@type": {
							"type": "string"
						},
						"xdm:sourceSchema": {
							"type": "string"
						},
						"xdm:sourceProperty": {
							"type": "string"
						},
						"xdm:isPrimary": {
							"type": "boolean"
						},
						"descriptorType": {
							"type": "string"
						},
						"version": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "xdmDescriptorCollection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "outputJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/xdmDescriptorCollection')]",
				"[concat(variables('factoryId'), '/datasets/outputJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfAdobeTransform')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "tenantXdmJson",
								"type": "DatasetReference"
							},
							"name": "tenantXdm"
						},
						{
							"dataset": {
								"referenceName": "globalXdmJson",
								"type": "DatasetReference"
							},
							"name": "globalXdm"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "outputJson",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "tenantXdmSplit"
						},
						{
							"name": "metaClassXdmLookup"
						},
						{
							"name": "metaClassXdmSelect"
						},
						{
							"name": "otherSelect"
						},
						{
							"name": "mergedtenantXdm"
						},
						{
							"name": "behaviorDerivedColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {_id} as ({$oid} as string),",
						"          id as string,",
						"          type as string,",
						"          title as string,",
						"          auditable as boolean,",
						"          description as string,",
						"          metaclass as string,",
						"          xdmType as string,",
						"          refs as string[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> tenantXdm",
						"source(output(",
						"          {_id} as ({$oid} as string),",
						"          id as string,",
						"          title as string,",
						"          description as string,",
						"          auditable as boolean,",
						"          refs as string[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> globalXdm",
						"tenantXdm split(locate('/xdm/',metaclass) > 0,",
						"     disjoint: false) ~> tenantXdmSplit@(metaClassXdm, other)",
						"tenantXdmSplit@metaClassXdm, globalXdm lookup(metaclass == globalXdm@id,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> metaClassXdmLookup",
						"metaClassXdmLookup select(mapColumn(",
						"          id = tenantXdmSplit@metaClassXdm@id,",
						"          name = tenantXdmSplit@metaClassXdm@title,",
						"          metaclass,",
						"          class = globalXdm@title,",
						"          refs",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> metaClassXdmSelect",
						"tenantXdmSplit@other select(mapColumn(",
						"          id,",
						"          name = title,",
						"          metaclass,",
						"          class = title,",
						"          refs",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: true) ~> otherSelect",
						"metaClassXdmSelect, otherSelect union(byName: true)~> mergedtenantXdm",
						"mergedtenantXdm derive(behavior = iif(contains(refs,#item==\"https://ms.adobe.com/xdm/data/record\"), \"Record\", iif(contains(refs,#item==\"https://ms.adobe.com/xdm/data/timeseries\"), \"Time-series\", \"\"))) ~> behaviorDerivedColumn",
						"behaviorDerivedColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          id,",
						"          name,",
						"          metaclass,",
						"          class,",
						"          refs,",
						"          behavior",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tenantXdmJson')]",
				"[concat(variables('factoryId'), '/datasets/globalXdmJson')]",
				"[concat(variables('factoryId'), '/datasets/outputJson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tenantXdm Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100,
								"filter": "{\"xdmType\": \"schema\"}"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "tenantXdmCollection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tenantXdmJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy globalXdm Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy tenantXdm Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "globalXdmCollection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "globalXdmJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transform Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy xdmDescriptor Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfAdobeTransform",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"tenantXdm": {},
									"globalXdm": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy xdmDescriptor Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy globalXdm Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "xdmDescriptorCollection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "xdmDescriptorJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tenantXdmCollection')]",
				"[concat(variables('factoryId'), '/datasets/tenantXdmJson')]",
				"[concat(variables('factoryId'), '/datasets/globalXdmCollection')]",
				"[concat(variables('factoryId'), '/datasets/globalXdmJson')]",
				"[concat(variables('factoryId'), '/dataflows/dfAdobeTransform')]",
				"[concat(variables('factoryId'), '/datasets/xdmDescriptorCollection')]",
				"[concat(variables('factoryId'), '/datasets/xdmDescriptorJson')]"
			]
		}
	]
}