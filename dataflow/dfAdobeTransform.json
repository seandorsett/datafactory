{
	"name": "dfAdobeTransform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "tenantXdmJson",
						"type": "DatasetReference"
					},
					"name": "tenantXdm"
				},
				{
					"dataset": {
						"referenceName": "globalXdmJson",
						"type": "DatasetReference"
					},
					"name": "globalXdm"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {_id} as ({$oid} as string),",
				"          id as string,",
				"          type as string,",
				"          title as string,",
				"          auditable as boolean,",
				"          description as string,",
				"          metaclass as string,",
				"          xdmType as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> tenantXdm",
				"source(output(",
				"          {_id} as ({$oid} as string),",
				"          id as string,",
				"          title as string,",
				"          description as string,",
				"          auditable as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> globalXdm",
				"tenantXdm split(locate('/xdm/',metaclass) > 0,",
				"     disjoint: false) ~> split1@(metaClassXdm, other)",
				"globalXdm lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1"
			]
		}
	}
}